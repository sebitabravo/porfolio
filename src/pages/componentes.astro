---
import Layout from "../layouts/Layout.astro";
import SectionContainer from "../components/SectionContainer.astro";
import Badge from "../components/Badge.astro";
import AnimatedButton from "../components/AnimatedButton.astro";
import TechBadge from "../components/TechBadge.astro";
import ExperienceCard from "../components/ExperienceCard.astro";
import ProjectCard from "../components/ProjectCard.astro";
import GitHubIcon from "../components/icons/GitHub.astro";
import LinkedInIcon from "../components/icons/Linkedin.astro";
import MailIcon from "../components/icons/Mail.astro";
---

<Layout title="Sistema de Diseño - Portafolio">
  <SectionContainer class="py-44 pb-32 flex flex-col gap-y-10">
    <div
      class="bg-gray-50 dark:bg-gray-800 rounded-xl p-8 border border-gray-200 dark:border-gray-700"
    >
      <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4">
        🚧 En construcción
      </h2>
      <p class="text-gray-600 dark:text-gray-400 mb-6">
        Estoy trabajando en crear una buena documentacion sobre como utilize
        componentes y estilos en mi portafolio, utilizando Astro y Tailwind CSS.
      </p>
      <p class="text-sm text-gray-500 dark:text-gray-500">
        Lo que se ve es temporal y no es recomendable utilizar ya que es un
        prototipo
      </p>
    </div>
    <!-- Badge -->
    <article class="mb-10">
      <h1 class="mb-4 text-xl font-semibold">&lt;Badge /&gt;</h1>
      <Badge>Disponible para trabajar</Badge>
      <pre
        class="mt-4 bg-gray-900 text-white text-sm p-4 rounded-lg overflow-x-auto border">
<code>{`<div class="flex justify-center items-center space-x-4 mb-8">
  <span class="relative inline-flex overflow-hidden rounded-full p-[1px] animate-bounce-subtle">
    <span class="absolute inset-[-1000%] animate-[spin_2s_linear_infinite] bg-[conic-gradient(from_90deg_at_50%_50%,#51E4B8_0%,#21554E_50%,#51E4B8_100%)]"></span>
    <div class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 relative z-10">
      <span class="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
      Disponible para trabajar
    </div>
  </span>
</div>`}</code>
  </pre>
    </article>

    <!-- AnimatedButton -->
    <article class="mb-10">
      <h1 class="mb-4 text-xl font-semibold">&lt;AnimatedButton /&gt;</h1>
      <div class="flex gap-4 flex-wrap mb-4">
        <AnimatedButton variant="primary" size="sm">Pequeño</AnimatedButton>
        <AnimatedButton variant="primary" size="md">Mediano</AnimatedButton>
        <AnimatedButton variant="primary" size="lg">Grande</AnimatedButton>
        <AnimatedButton variant="outline" size="md">Outline</AnimatedButton>
      </div>
      <pre
        class="mt-4 bg-gray-900 text-white text-sm p-4 rounded-lg overflow-x-auto border">
<code>
{String.raw`---
export interface Props {
  href?: string;
  variant?: "primary" | "secondary" | "outline";
  size?: "sm" | "md" | "lg";
  class?: string;
}

const {
  href,
  variant = "primary",
  size = "md",
  class: className = "",
} = Astro.props;

const baseClasses =
  "inline-flex items-center justify-center font-medium rounded-lg transition-all duration-200 hover:scale-105 active:scale-95";

const variantClasses = {
  primary:
    "bg-primary-600 hover:bg-primary-700 text-white shadow-lg hover:shadow-xl",
  secondary:
    "bg-secondary-600 hover:bg-secondary-700 text-white shadow-lg hover:shadow-xl",
  outline:
    "border-2 border-primary-600 text-primary-600 hover:bg-primary-600 hover:text-white dark:border-primary-400 dark:text-primary-400 dark:hover:bg-primary-400 dark:hover:text-gray-900",
};

const sizeClasses = {
  sm: "px-3 py-2 text-sm",
  md: "px-6 py-3 text-base",
  lg: "px-8 py-4 text-lg",
};

const classes = \`\${baseClasses} \${variantClasses[variant]} \${sizeClasses[size]} \${className}\`;
---

{
  href ? (
    <a href={href} class={classes}>
      <slot />
    </a>
  ) : (
    <button class={classes}>
      <slot />
    </button>
  )
}
`}
</code>
</pre>
    </article>

    <!-- TechBadge -->
    <article class="mb-10">
      <h1 class="mb-4 text-xl font-semibold">&lt;TechBadge /&gt;</h1>
      <div class="flex gap-3 flex-wrap mb-4">
        <TechBadge name="Astro" icon="/placeholder.svg" color="accent" />
        <TechBadge name="React" icon="/placeholder.svg" color="primary" />
        <TechBadge name="Vue.js" icon="/placeholder.svg" color="secondary" />
      </div>
      <pre
        class="mt-4 bg-gray-900 text-white text-sm p-4 rounded-lg overflow-x-auto border">
<code>{String.raw`---
export interface Props {
  name: string;
  icon: string;
  color?: string;
}

const { name, icon, color = "primary" } = Astro.props;

const colorClasses = {
  primary:
    "bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 border-primary-200 dark:border-primary-700",
  secondary:
    "bg-secondary-100 dark:bg-secondary-900 text-secondary-800 dark:text-secondary-200 border-secondary-200 dark:border-secondary-700",
  accent:
    "bg-accent-100 dark:bg-accent-900 text-accent-800 dark:text-accent-200 border-accent-200 dark:border-accent-700",
  gray: "bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 border-gray-200 dark:border-gray-700",
};
---

<div
  class={\`inline-flex items-center space-x-2 px-3 py-2 rounded-lg border transition-all duration-200 hover:scale-105 \${colorClasses[color]}\`}
>
  <img src={icon || "/placeholder.svg"} alt={\`\${name} icon\`} class="w-5 h-5" />
  <span class="text-sm font-medium">{name}</span>
</div>`}</code>
</pre>
    </article>

    <!-- ExperienceCard -->
    <article class="mb-10">
      <h1 class="mb-4 text-xl font-semibold">&lt;ExperienceCard /&gt;</h1>

      <ExperienceCard
        company="Ejemplo Company"
        position="Frontend Developer"
        period="2023 - Presente"
        description="Desarrollo de interfaces accesibles y responsive."
        logo="/placeholder.svg"
        current={true}
      />
      <pre
        class="mt-4 bg-gray-900 text-white text-sm p-4 rounded-lg overflow-x-auto border">
<code>{String.raw`---
export interface Props {
  company: string;
  position: string;
  period: string;
  description: string;
  logo?: string;
  current?: boolean;
}

const {
  company,
  position,
  period,
  description,
  logo,
  current = false,
} = Astro.props;
---

<div
  class="bg-white dark:bg-gray-800 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 p-6 border border-gray-200 dark:border-gray-700 animate-slide-up"
>
  <div class="flex items-start space-x-4">
    {
      logo && (
        <div class="flex-shrink-0">
          <img
            src={logo || "/placeholder.svg"}
            alt={\`Logo de \${company}\`}
            class="w-12 h-12 rounded-lg object-cover"
          />
        </div>
      )
    }

    <div class="flex-1">
      <div class="flex items-center justify-between mb-2">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
          {position}
        </h3>
        {
          current && (
            <span class="px-2 py-1 text-xs font-medium bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 rounded-full">
              Actual
            </span>
          )
        }
      </div>

      <p class="text-primary-600 dark:text-primary-400 font-medium mb-1">
        {company}
      </p>

      <p class="text-sm text-gray-500 dark:text-gray-400 mb-3">
        {period}
      </p>

      <p class="text-gray-700 dark:text-gray-300 text-sm leading-relaxed">
        {description}
      </p>

      <button
        class="mt-4 text-primary-600 dark:text-primary-400 text-sm font-medium hover:text-primary-700 dark:hover:text-primary-300 transition-colors"
      >
        Saber más →
      </button>
    </div>
  </div>
</div>`}</code>
</pre>
    </article>

    <!-- ProjectCard -->
    <article class="mb-10">
      <h1 class="mb-4 text-xl font-semibold">&lt;ProjectCard /&gt;</h1>
      <ProjectCard
        title="Proyecto Portafolio"
        description="Aplicación web moderna con Astro y Tailwind."
        image="/placeholder.svg"
        technologies={["Astro", "Tailwind", "TypeScript"]}
        demoUrl="#"
        githubUrl="#"
      />
      <pre
        class="mt-4 bg-gray-900 text-white text-sm p-4 rounded-lg overflow-x-auto border">
<code>{String.raw`---
export interface Props {
  title: string;
  description: string;
  image: string;
  technologies: string[];
  demoUrl?: string;
  githubUrl?: string;
}

const { title, description, image, technologies, demoUrl, githubUrl } =
  Astro.props;
---

<div
  class="bg-white dark:bg-gray-800 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden border border-gray-200 dark:border-gray-700 group animate-slide-up"
>
  <div class="relative overflow-hidden">
    <img
      src={image || "/placeholder.svg"}
      alt={\`Preview de \${title}\`}
      class="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300"
    />
    <div
      class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"
    >
    </div>
  </div>

  <div class="p-6">
    <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-2">
      {title}
    </h3>

    <p class="text-gray-600 dark:text-gray-300 text-sm mb-4 leading-relaxed">
      {description}
    </p>

    <div class="flex flex-wrap gap-2 mb-4">
      {
        technologies.map((tech) => (
          <span class="px-2 py-1 text-xs font-medium bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full">
            {tech}
          </span>
        ))
      }
    </div>

    <div class="flex space-x-3">
      {
        demoUrl && (
          <a
            href={demoUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="flex-1 bg-primary-600 hover:bg-primary-700 text-white text-sm font-medium py-2 px-4 rounded-lg transition-colors text-center"
          >
            Ver Demo
          </a>
        )
      }

      {
        githubUrl && (
          <a
            href={githubUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="flex-1 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-900 dark:text-white text-sm font-medium py-2 px-4 rounded-lg transition-colors text-center"
          >
            Código
          </a>
        )
      }
    </div>
  </div>
</div>`}</code>
</pre>
    </article>

    <!-- Íconos Sociales -->
    <article class="mb-10">
      <h1 class="mb-4 text-xl font-semibold">Íconos Sociales</h1>

      <!-- Vista previa -->
      <div class="flex gap-6 text-gray-700 dark:text-white mb-4">
        <MailIcon class="w-6 h-6" />
        <LinkedInIcon class="w-6 h-6" />
        <GitHubIcon class="w-6 h-6" />
      </div>

      <!-- Código SVG de los íconos -->
      <div class="border">
        <pre
          class="bg-gray-900 text-white text-sm p-4 rounded-lg overflow-x-auto mb-2">
<code>{String.raw`<!-- GitHubIcon.astro -->
<svg
  xmlns="http://www.w3.org/2000/svg"
  fill="currentColor"
  viewBox="0 0 24 24"
  {...Astro.props}
>
  <path
    d="M12 0C5.373 0 0 5.373 0 12a11.99 11.99 0 008.207 11.387c.6.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23a11.4 11.4 0 013.003-.404c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576A12 12 0 0024 12c0-6.627-5.373-12-12-12z"
  ></path>
</svg>`}</code>
</pre>

        <pre
          class="bg-gray-900 text-white text-sm p-4 rounded-lg overflow-x-auto mb-2 border">
<code>{String.raw`<!-- MailIcon.astro -->
<svg
  xmlns="http://www.w3.org/2000/svg"
  fill="currentColor"
  viewBox="0 0 24 24"
  {...Astro.props}
>
  <path
    d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"
  ></path>
</svg>`}</code>
</pre>

        <pre
          class="bg-gray-900 text-white text-sm p-4 rounded-lg overflow-x-auto">
<code>{String.raw`<!-- LinkedInIcon.astro -->
<svg
  xmlns="http://www.w3.org/2000/svg"
  fill="currentColor"
  viewBox="0 0 24 24"
  {...Astro.props}
>
  <path
    d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452z"
  ></path>
</svg>`}</code>
</pre>
      </div>
    </article>
  </SectionContainer>
</Layout>
